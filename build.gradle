//file:noinspection GroovyAssignabilityCheck
plugins {
  id "fabric-loom" version "0.12.+"
  id "org.quiltmc.quilt-mappings-on-loom" version "4.+"
  id "org.quiltmc.gradle.licenser" version "1.+"
  id "io.github.juuxel.loom-quiltflower" version "1.+"
  id "com.modrinth.minotaur" version "2.+"
  id "maven-publish"
}

String minecraft_version = "22w11a"
String quilt_mappings = "2"          // https://lambdaurora.dev/tools/import_quilt.html
String loader_version = "0.13.3"     // https://fabricmc.net/develop/
String modmenu_version = "3.1.0"     // https://modrinth.com/mod/modmenu/versions
String midnightlib_version = "0.4.0" // https://modrinth.com/mod/midnightlib/versions
String qsl_minecraft_version = minecraft_version + "-fixed-screens"

archivesBaseName = "quilt-loading-screen"
version = loom.modVersion + "+" + minecraft_version

repositories {
  mavenLocal()
  maven { url "https://maven.frydae.dev/snapshots" }
  maven { url "https://maven.terraformersmc.com" }
  maven { url "https://api.modrinth.com/maven" }
  maven { url "https://maven.quiltmc.org/repository/release" }
  maven {
    url "https://maven.quiltmc.org/repository/snapshot"
    content {
      includeGroup "org.quiltmc.fabric_api_qsl"
      includeGroupByRegex "org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?"
    }
  }
}

dependencies {
  minecraft "com.mojang:minecraft:${minecraft_version}"
  mappings(loom.layered {
    addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:v2"))
  })
  modImplementation "net.fabricmc:fabric-loader:${loader_version}"
  modImplementation include("org.quiltmc.fabric_api_qsl:fabric-api-base:1.0.0+${qsl_minecraft_version}-SNAPSHOT")

  // Resource Loader: include FAPI QSL resource loader, compile against QSL only, runtime both
  modImplementation "org.quiltmc.qsl.core:resource_loader:1.0.0+${minecraft_version}-SNAPSHOT"
  modLocalRuntime include("org.quiltmc.fabric_api_qsl:fabric-resource-loader-v0:1.0.2+${qsl_minecraft_version}-SNAPSHOT")

  // MidnightLib, config library
  modRuntimeOnly "org.quiltmc.fabric_api_qsl:fabric-lifecycle-events-v1:2.0.2+${qsl_minecraft_version}-SNAPSHOT"
  modRuntimeOnly "org.quiltmc.fabric_api_qsl:fabric-renderer-registries-v1:3.2.11+${qsl_minecraft_version}-SNAPSHOT"
  modImplementation include("maven.modrinth:midnightlib:${midnightlib_version}")

  // Mod Menu
  modRuntimeOnly "org.quiltmc.fabric_api_qsl:fabric-screen-api-v1:1.0.11+${qsl_minecraft_version}-SNAPSHOT"
  modImplementation("com.terraformersmc:modmenu:${modmenu_version}") { transitive = false }

  // Transitive runtime dependencies
  modLocalRuntime "org.quiltmc.qsl.core:lifecycle_events:1.0.0+${minecraft_version}-SNAPSHOT"
  modLocalRuntime "org.quiltmc.qsl.gui:tooltip:1.0.0+${minecraft_version}-SNAPSHOT"
}

idea { module { downloadJavadoc = false } }

tasks.withType(JavaCompile).forEach {
  it.options.encoding = "UTF-8"
  //noinspection all
  it.options.release = 17
}

jar { from("LICENSE", "README.md") }

license {
  rule "HEADER"
  include "**/*.java"
}

modrinth {
  projectId = "VPU6VYVP"
  uploadFile = remapJar
  loaders = ["fabric"]
}

java { withSourcesJar() }

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId = 'coffee.waffle'
      artifactId = archivesBaseName
      version = version
      from components.java
    }
  }
  repositories {
    maven {
      url = System.getenv().MAVEN_URL
      credentials {
        username = System.getenv().MAVEN_USER
        password = System.getenv().MAVEN_PASS
      }
      authentication { basic(BasicAuthentication) }
    }
  }
}
